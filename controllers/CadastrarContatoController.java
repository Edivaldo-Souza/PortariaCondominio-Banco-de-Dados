package controllers;

import javafx.fxml.FXML;

import javafx.scene.control.TextField;
import javafx.scene.control.ToolBar;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.swing.JOptionPane;

import application.Main;
import entities.Contato;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.control.Button;
import javafx.scene.control.Label;

import javafx.scene.layout.Pane;
import model.CadastrarContatoModel;

public class CadastrarContatoController extends CadastrarEmpregadoController{
	@FXML
	private TextField nome;
	@FXML
	private TextField telefone;
	@FXML
	private Label rotuloNome;
	@FXML
	private Label rotuloParentesco;
	@FXML
	private Label rotuloTel;
	@FXML
	private Pane painel;
	@FXML
	private TextField parentesco;
	@FXML
	private Label rotuloID;
	@FXML
	private Label id;
	
	private static String cpf_representante;
	
	public static void setIdCpf(String cpf) {
		if(!cpf.isEmpty()) cpf_representante = cpf;
	}
	
	public void limparEspacos() {
		parentesco.setText("");
		nome.setText("");
		telefone.setText("");
	}

	// Event Listener on Button.onAction
	@FXML
	public void adicionar(ActionEvent event) {
		limparEspacos();
		setID();
	}
	// Event Listener on Button.onAction
	@FXML
	public void returnToMainPage(ActionEvent event) {
		Main.mainPage();
	}
	// Event Listener on Button.onAction
	@FXML
	public void salvarDados(ActionEvent event) {
		Contato entity = new Contato();
		CadastrarContatoModel model = new CadastrarContatoModel();
		
		if(idSelecionado == "...") {
			if(!nome.getText().isEmpty() || !parentesco.getText().isEmpty() || !telefone.getText().isEmpty()) {
				entity.setNome(nome.getText());
				entity.setParentesco(parentesco.getText());
				entity.setTelefone(telefone.getText());
				model.submit(entity, cpf_representante);
				limparEspacos();
				JOptionPane.showMessageDialog(null, "Dados Salvos");
			}
			else {
				JOptionPane.showMessageDialog(null, "Informe todos os dados!");
			}
		}
		else {
			entity.setNome(nome.getText());
			entity.setParentesco(parentesco.getText());
			entity.setTelefone(telefone.getText());
			int idNum = Integer.parseInt(idSelecionado);
			model.saveChanges(entity, cpf_representante, idNum);
			limparEspacos();
			setID();
			JOptionPane.showMessageDialog(null, "Dados Salvos");
		}
	}
	// Event Listener on Button.onAction
	@FXML
	public void nextPage(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button.onAction
	@FXML
	public void exibir(ActionEvent event) {
		removerTodosMoradores();
		CadastrarContatoModel model = new CadastrarContatoModel();
		List<Contato> entities = model.selectAll(cpf_representante);
		Iterator<Contato> it = entities.iterator();
		painel.setPrefHeight(entities.size()*TOOLBAR_HEIGHT);;
		
		List<ToolBar> listaMoradores = new ArrayList<ToolBar>();
		int contador = 0;
		while(it.hasNext()) {
			
			Contato entity = it.next();
			
			Label Lid = new Label(Integer.toString(entity.getId()));
			Lid.setAlignment(rotuloID.getAlignment());
			Lid.setPrefWidth(rotuloID.getWidth());
			
			Label LNome = new Label(entity.getNome());
			LNome.setAlignment(rotuloNome.getAlignment());
			LNome.setPrefWidth(rotuloNome.getWidth());
			
			Label LParentesco = new Label(entity.getParentesco());
			LParentesco.setAlignment(rotuloParentesco.getAlignment());
			LParentesco.setPrefWidth(rotuloParentesco.getWidth());
			
			Label LTelefone = new Label(entity.getTelefone());
			LTelefone.setAlignment(rotuloTel.getAlignment());
			LTelefone.setPrefWidth(rotuloTel.getWidth());
			
			Button editar = new Button("editar");
			editar.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					idSelecionado = Integer.toString(entity.getId());
					id.setText(idSelecionado);
					Contato m = model.loadData(cpf_representante, entity.getId());
					nome.setText(m.getNome());
					parentesco.setText(m.getParentesco());
					telefone.setText(m.getTelefone());
				}
			});
			Button excluir = new Button("X");
			excluir.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					limparEspacos();
					model.delete(cpf_representante,entity.getId());
					exibir(event);
					
				}
			});
			
			listaMoradores.add(new ToolBar(Lid,LNome,LParentesco,LTelefone,editar,excluir));

			listaMoradores.get(contador).setLayoutX(0);
			listaMoradores.get(contador).setLayoutY(contador*TOOLBAR_HEIGHT);
			listaMoradores.get(contador).setPrefSize(TOOLBAR_WIDTH,TOOLBAR_HEIGHT);
			painel.getChildren().add(listaMoradores.get(contador));
			
			contador++;
		}
		System.out.println(contador);
	}
	// Event Listener on Button.onAction
	@FXML
	public void previousPage(ActionEvent event) {
		Main.pageCadastrarAnimal(cpf_representante);
	}
}
